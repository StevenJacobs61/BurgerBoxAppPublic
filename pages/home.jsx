import Head from 'next/head'
import Menu from '../components/menu'
import styles from '../styles/Home.module.css'
import LandingPage from '../components/landing_page/landing_page'
import axios from 'axios'
import Alert from '../components/alert'
import dbConnect from '../utils/mongodb'
import About from '../components/about'
import { useAlert } from '../context/alertContext'
import { useSettings } from '../context/settingsContext'
import { useMenu } from '../context/menuContext'
import { useEffect } from 'react'


export default function Home({ productsList, sections, settings}) {

  const {setSettings} = useSettings();
  const {setSections, setProducts} = useMenu();
  const { alert } = useAlert();
  useEffect(() => {
    setSettings(settings);
    setProducts(productsList);
    setSections(sections.filter((section) => section.title !== "Extra Toppings" && section.title !== "Upgrades"));
  }, [setSettings, settings, productsList, setProducts, sections, setSections]);
  
  return (
    <div className={styles.container}>
      <Head>        
        <title>Burger Box Seaford</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/img/order-box.webp" />
      </Head>
      {alert ? <Alert/> : null}
      <LandingPage />
      <Menu 
      />
      {/* <About/> */}
  </div> 
  )
}
export const getServerSideProps = async (context) => {
  const { req, query } = context
  const location = query.location;

  const myCookie = req?.cookies || "";
  let admin = false;

  let token = 
      location === "Seaford" ? process.env.NEXT_PUBLIC_SEAFORD_TOKEN 
    : location === "Eastbourne" ? process.env.NEXT_PUBLIC_EASTBOURNE_TOKEN
    : null;

  if (myCookie.token === token){
    admin = true
    const locationQuery = {
      location: query?.location
    };
    const queryString = new URLSearchParams(locationQuery).toString();
    return {
      redirect: {
        destination: `/admin/orders?${queryString}`,
        permanent: false,
      },
    };
  }

  const locationFilter = {
    params: {
      location: location 
    }
  }
  
  await dbConnect();

  const sectionsRes = await axios.get(`${process.env.NEXT_PUBLIC_BASE_URL}/api/sections`, locationFilter)
  const productsRes = await axios.get(`${process.env.NEXT_PUBLIC_BASE_URL}/api/products`, locationFilter)
  const settingsRes = await axios.get(`${process.env.NEXT_PUBLIC_BASE_URL}/api/settings`, locationFilter)
  
  
  return {
    props:{
          productsList: productsRes.data,
          sections: sectionsRes.data, 
          settings: settingsRes.data,
        }
    }
}